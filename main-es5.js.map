{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-joke/add-joke.component.ts","webpack:///src/app/components/add-joke/add-joke.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/joke/joke.component.ts","webpack:///src/app/components/joke/joke.component.html","webpack:///src/app/components/jokes/jokes.component.ts","webpack:///src/app/components/jokes/jokes.component.html","webpack:///src/app/services/jokes.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","name","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddJokeComponent","addJoke","joke","Date","now","title","text","emit","onSubmit","HeaderComponent","open","JokeComponent","JokesComponent","jokesService","jokes","getJokes","push","setJokes","JokesService","JSON","parse","localStorage","getItem","setItem","stringify","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Ten-jokes';\n}\n","<div>\n  <app-header></app-header>\n  <app-jokes></app-jokes>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { JokesComponent } from './components/jokes/jokes.component';\nimport { JokeComponent } from './components/joke/joke.component';\nimport { AddJokeComponent } from './components/add-joke/add-joke.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    JokesComponent,\n    JokeComponent,\n    AddJokeComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Joke } from '../../models/Joke';\n\n@Component({\n  selector: 'app-add-joke',\n  templateUrl: './add-joke.component.html',\n  styleUrls: ['./add-joke.component.css']\n})\nexport class AddJokeComponent implements OnInit {\n  @Output() addJoke: EventEmitter<Joke> = new EventEmitter();\n\n  title: string;\n  text: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    const joke = {\n      id: Date.now(),\n      title: this.title,\n      text: this.text\n    };\n\n    this.addJoke.emit(joke);\n  }\n}\n","<form\n  #myForm=\"ngForm\"\n  autocomplete=\"off\"\n  (ngSubmit)=\"onSubmit(); myForm.reset()\"\n>\n  <div class=\"add-joke\">\n    <div class=\"inputs\">\n      <input\n        type=\"text\"\n        name=\"title\"\n        [(ngModel)]=\"title\"\n        placeholder=\"Title\"\n        autofill=\"false\"\n      />\n      <input\n        [(ngModel)]=\"text\"\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Write a new joke...\"\n        autofill=\"false\"\n      />\n    </div>\n    <button type=\"submit\">+</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  open: boolean = false;\n  title: string = '10 Jokes';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<nav>\n  <div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n  <div>{{ title }}</div>\n  <div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n</nav>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Joke } from 'src/app/models/Joke';\n\n@Component({\n  selector: 'joke',\n  templateUrl: './joke.component.html',\n  styleUrls: ['./joke.component.css']\n})\nexport class JokeComponent implements OnInit {\n  @Input() joke: Joke;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"joke\">\n  <div class=\"title\">{{ joke.title }}</div>\n  <div class=\"body\">\n    {{ joke.text }}\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Joke } from '../../models/Joke';\nimport { JokesService } from '../../services/jokes.service';\n\n@Component({\n  selector: 'app-jokes',\n  templateUrl: './jokes.component.html',\n  styleUrls: ['./jokes.component.css']\n})\nexport class JokesComponent implements OnInit {\n  jokes: Joke[];\n\n  constructor(private jokesService: JokesService) {}\n\n  ngOnInit(): void {\n    this.jokes = this.jokesService.getJokes();\n  }\n\n  addJoke(joke: Joke) {\n    this.jokes.push(joke);\n    this.jokesService.setJokes(this.jokes);\n  }\n}\n","<app-add-joke (addJoke)=\"addJoke($event)\"></app-add-joke>\n<div class=\"jokes\">\n  <joke *ngFor=\"let joke of jokes\" [joke]=\"joke\"></joke>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Joke } from '../models/Joke';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokesService {\n  constructor() {}\n\n  getJokes() {\n    return JSON.parse(localStorage.getItem('jokes'));\n  }\n\n  setJokes(jokes: Joke[]) {\n    localStorage.setItem('jokes', JSON.stringify(jokes));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}